# coding: utf-8

"""
    sdk.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: version not set
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from agones_python_sdk.models.sdk_game_server import SdkGameServer

class TestSdkGameServer(unittest.TestCase):
    """SdkGameServer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SdkGameServer:
        """Test SdkGameServer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SdkGameServer`
        """
        model = SdkGameServer()
        if include_optional:
            return SdkGameServer(
                object_meta = agones_python_sdk.models.representation_of_the_k8s_object_meta_resource.representation of the K8s ObjectMeta resource(
                    name = '', 
                    namespace = '', 
                    uid = '', 
                    resource_version = '', 
                    generation = '', 
                    creation_timestamp = '', 
                    deletion_timestamp = '', 
                    annotations = {
                        'key' : ''
                        }, 
                    labels = {
                        'key' : ''
                        }, ),
                spec = agones_python_sdk.models.game_server_spec.GameServerSpec(
                    health = agones_python_sdk.models.game_server_spec_health.GameServerSpecHealth(
                        disabled = True, 
                        period_seconds = 56, 
                        failure_threshold = 56, 
                        initial_delay_seconds = 56, ), ),
                status = agones_python_sdk.models.sdk_game_server_status.sdkGameServerStatus(
                    state = '', 
                    address = '', 
                    addresses = [
                        agones_python_sdk.models.status_address.StatusAddress(
                            type = '', 
                            address = '', )
                        ], 
                    ports = [
                        agones_python_sdk.models.status_port.StatusPort(
                            name = '', 
                            port = 56, )
                        ], 
                    players = agones_python_sdk.models.[stage:alpha]
[feature_flag:player_tracking].[Stage:Alpha]
[FeatureFlag:PlayerTracking](
                        count = '', 
                        capacity = '', 
                        ids = [
                            ''
                            ], ), 
                    counters = {
                        'key' : agones_python_sdk.models.[stage:beta]
[feature_flag:counts_and_lists].[Stage:Beta]
[FeatureFlag:CountsAndLists](
                            count = '', 
                            capacity = '', )
                        }, 
                    lists = {
                        'key' : agones_python_sdk.models.[stage:beta]
[feature_flag:counts_and_lists].[Stage:Beta]
[FeatureFlag:CountsAndLists](
                            capacity = '', 
                            values = [
                                ''
                                ], )
                        }, )
            )
        else:
            return SdkGameServer(
        )
        """

    def testSdkGameServer(self):
        """Test SdkGameServer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
